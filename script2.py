import tweepy
import telebot
import time
import os
from dotenv import load_dotenv
from datetime import datetime, timezone


# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
load_dotenv()
print("[LOG] –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

# --- –ù–ê–°–¢–†–û–ô–ö–ò TWITTER API ---
TWITTER_API_KEY = os.getenv("TWITTER_API_KEY")
TWITTER_API_SECRET = os.getenv("TWITTER_API_SECRET")
TWITTER_ACCESS_TOKEN = os.getenv("TWITTER_ACCESS_TOKEN")
TWITTER_ACCESS_TOKEN_SECRET = os.getenv("TWITTER_ACCESS_TOKEN_SECRET")
TWITTER_BEARER_TOKEN = os.getenv("TWITTER_BEARER_TOKEN")
TWITTER_USERNAME = "StreamDataBase"  # –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Twitter

# --- –ù–ê–°–¢–†–û–ô–ö–ò TELEGRAM –ë–û–¢–ê ---
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
TELEGRAM_CHANNEL_ID = "@TwitterBadgeParser"

# –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ—Å—Ç–æ–≤
SKIP_PHRASE = "Get notified on Discord"



print("[LOG] –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")

# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ---
bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)
client = tweepy.Client(
    bearer_token=TWITTER_BEARER_TOKEN,
    consumer_key=TWITTER_API_KEY,
    consumer_secret=TWITTER_API_SECRET,
    access_token=TWITTER_ACCESS_TOKEN,
    access_token_secret=TWITTER_ACCESS_TOKEN_SECRET,
)
print("[LOG] –ö–ª–∏–µ–Ω—Ç—ã API –¥–ª—è Twitter –∏ Telegram –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã.")

# --- –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç–≤–∏—Ç–∞ ---
last_sent_tweet_id = None


def get_latest_tweets(since_id=None):
    """–ü–æ–ª—É—á–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç–≤–∏—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print("  [FUNC] –í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è get_latest_tweets...")
    now_utc = datetime.now(timezone.utc)
    start_of_day = now_utc.replace(hour=0, minute=0, second=0, microsecond=0)
    start_time_iso = start_of_day.isoformat()
    print(f"    [API] –ó–∞–ø—Ä–∞—à–∏–≤–∞—é ID –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {TWITTER_USERNAME}")
    user_response = client.get_user(username=TWITTER_USERNAME)
    if user_response.data is None:
        print(
            f"    [API] ‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è '{TWITTER_USERNAME}'."
        )
        print(
            "      –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã: –∞–∫–∫–∞—É–Ω—Ç –∑–∞—â–∏—â–µ–Ω (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π), –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."
        )
        return None
    user_id = user_response.data.id
    print(f"    [API] ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω: {user_id}")

    print(f"    [API] –ó–∞–ø—Ä–∞—à–∏–≤–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Ç–≤–∏—Ç–æ–≤ –¥–ª—è ID: {user_id}")
    response = client.get_users_tweets(user_id, max_results=5, since_id=since_id)
    print("    [API] –û—Ç–≤–µ—Ç –æ—Ç Twitter API –ø–æ–ª—É—á–µ–Ω.")
    return response.data


def send_to_telegram(text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –≤ Telegram-–∫–∞–Ω–∞–ª."""
    print("  [FUNC] –í—ã–∑–≤–∞–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è send_to_telegram...")
    print(f"    [SEND] –ü—ã—Ç–∞—é—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª: {TELEGRAM_CHANNEL_ID}")
    try:
        bot.send_message(TELEGRAM_CHANNEL_ID, text)
        print("    [SEND] ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram.")
    except Exception as e:
        print(f"    [SEND] ‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")


def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã."""
    global last_sent_tweet_id
    print(
        "\n[INIT] –ü–∞—Ä—Å–µ—Ä –∑–∞–ø—É—â–µ–Ω. –í—ã–ø–æ–ª–Ω—è—é –ø–µ—Ä–≤—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Ç–≤–∏—Ç–∞..."
    )

    try:
        tweets = get_latest_tweets(since_id=None)
        if tweets:
            last_sent_tweet_id = tweets[0].id
            print(f"[INIT] –ù–∞—á–∞–ª—å–Ω—ã–π ID —Ç–≤–∏—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {last_sent_tweet_id}")
        else:
            print("[INIT] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–≤–∏—Ç—ã –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ.")
    except tweepy.TooManyRequests as e:
        print("[INIT] ‚è≥ –û–±–Ω–∞—Ä—É–∂–µ–Ω –∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ.")
        reset_timestamp_str = e.response.headers.get("x-rate-limit-reset")

        if reset_timestamp_str:
            reset_timestamp = int(reset_timestamp_str)
            current_timestamp = int(datetime.now(timezone.utc).timestamp())
            wait_time = max(0, reset_timestamp - current_timestamp + 5)

            print(
                f"  [WAIT] API —Ä–∞–∑—Ä–µ—à–∏—Ç –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ {wait_time // 60} –º–∏–Ω {wait_time % 60} —Å–µ–∫."
            )
            print("  [WAIT] –°–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è...")
            time.sleep(wait_time)
        else:
            print(
                "  [WAIT] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –≤—Ä–µ–º—è —Å–±—Ä–æ—Å–∞, –∂–¥—É 15 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
            )
            time.sleep(900)

    print("-" * 40)
    while True:
        print("\n[LOOP] –ù–∞—á–∏–Ω–∞—é –Ω–æ–≤—ã–π —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏...")
        try:
            # –ü–µ—Ä–µ–¥–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–≥–æ —Ç–≤–∏—Ç–∞
            tweets = get_latest_tweets(since_id=last_sent_tweet_id)

            if tweets:
                # –í–ê–ñ–ù–û: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–≤–∏—Ç—ã –æ—Ç —Å—Ç–∞—Ä—ã—Ö –∫ –Ω–æ–≤—ã–º, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Ä—è–¥–æ–∫
                for tweet in reversed(tweets):
                    print(f"  [CHECK] üî• –ù–∞–π–¥–µ–Ω –Ω–æ–≤—ã–π —Ç–≤–∏—Ç! ID: {tweet.id}")
                    print(f"    [CONTENT] –¢–µ–∫—Å—Ç: {tweet.text[:80]}...")

                    if SKIP_PHRASE and tweet.text.lower().strip().startswith(SKIP_PHRASE.lower()):
                        print(f"    [SKIP] üö´ –¢–≤–∏—Ç ID {tweet.id} –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–π —Ñ—Ä–∞–∑—ã. –ü—Ä–æ–ø—É—Å–∫–∞—é.")
                        continue

                    tweet_url = (
                        f"https://twitter.com/{TWITTER_USERNAME}/status/{tweet.id}"
                    )
                    message_to_send = f"{tweet.text}\n\n{tweet_url}"

                    send_to_telegram(message_to_send)

                    # –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ –ö–ê–ñ–î–û–ô –æ—Ç–ø—Ä–∞–≤–∫–∏
                    last_sent_tweet_id = tweet.id
                    print(
                        f"  [UPDATE] ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ç–≤–∏—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: {last_sent_tweet_id}"
                    )
                    time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ç–≤–∏—Ç–æ–≤
            else:
                print(f"  [CHECK] –ù–æ–≤—ã—Ö —Ç–≤–∏—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")

        except tweepy.errors.TweepyException as e:
            print("  [ERROR] ‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ API:")
            print(
                f"    [API Status]  Code: {e.response.status_code}, Reason: {e.response.reason}"
            )
            if e.api_errors:
                for error in e.api_errors:
                    print(
                        f"    [API Message] {error.get('title')}: {error.get('detail')}"
                    )
            else:
                print(f"    [API Raw]     {e.response.text}")
            print("    [RETRY] –ñ–¥—É 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π.")
            time.sleep(300)

        except tweepy.TooManyRequests as e:  # üëà –í–û–¢ –ò–ó–ú–ï–ù–ï–ù–ò–Ø
            # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º—è —Å–±—Ä–æ—Å–∞ –ª–∏–º–∏—Ç–∞ –∏–∑ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –æ—Ç–≤–µ—Ç–∞
            reset_timestamp_str = e.response.headers.get("x-rate-limit-reset")

            if reset_timestamp_str:
                # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
                reset_timestamp = int(reset_timestamp_str)
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ UTC
                current_timestamp = int(datetime.now(timezone.utc).timestamp())

                # –í—ã—á–∏—Å–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –æ—Å—Ç–∞–ª–æ—Å—å –∂–¥–∞—Ç—å
                wait_time = reset_timestamp - current_timestamp

                # –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–ø–∞—Å –≤ 5 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
                wait_time = max(0, wait_time + 5)

                print(f"  [ERROR] ‚è≥ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (429).")
                print(
                    f"    [WAIT] API —Ä–∞–∑—Ä–µ—à–∏—Ç –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ {wait_time // 60} –º–∏–Ω {wait_time % 60} —Å–µ–∫."
                )
                time.sleep(wait_time)
            else:
                # –ï—Å–ª–∏ –ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –ø—Ä–∏—à—ë–ª, –∂–¥—ë–º –ø–æ —Å—Ç–∞—Ä–∏–Ω–∫–µ
                print(
                    "  [ERROR] ‚è≥ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ (429). –ñ–¥—É 15 –º–∏–Ω—É—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."
                )
                time.sleep(900)
        except Exception as e:
            print(f"  [ERROR] ‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
            print("    [RETRY] –ñ–¥—É 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π.")
            time.sleep(300)

        print(f"[LOOP] –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º. –û–∂–∏–¥–∞–Ω–∏–µ 30 –º–∏–Ω—É—Ç...")
        time.sleep(1800)


if __name__ == "__main__":
    main()
